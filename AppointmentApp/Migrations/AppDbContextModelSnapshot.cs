// <auto-generated />
using System;
using AppointmentApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppointmentApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("AppointmentApp.Models.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("UserId");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateTime = new DateTime(2025, 4, 10, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            Status = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            DateTime = new DateTime(2025, 4, 28, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 2,
                            Status = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            DateTime = new DateTime(2025, 5, 5, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 3,
                            Status = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            DateTime = new DateTime(2025, 5, 10, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 4,
                            Status = 3,
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            DateTime = new DateTime(2025, 6, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 5,
                            Status = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 6,
                            DateTime = new DateTime(2025, 6, 3, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 6,
                            Status = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 7,
                            DateTime = new DateTime(2025, 6, 5, 15, 45, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 7,
                            Status = 3,
                            UserId = 2
                        },
                        new
                        {
                            Id = 8,
                            DateTime = new DateTime(2025, 4, 12, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            Status = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 9,
                            DateTime = new DateTime(2025, 5, 3, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 2,
                            Status = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 10,
                            DateTime = new DateTime(2025, 5, 7, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 3,
                            Status = 2,
                            UserId = 3
                        },
                        new
                        {
                            Id = 11,
                            DateTime = new DateTime(2025, 5, 14, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 4,
                            Status = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 12,
                            DateTime = new DateTime(2025, 6, 6, 10, 15, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 5,
                            Status = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 13,
                            DateTime = new DateTime(2025, 6, 10, 11, 45, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 6,
                            Status = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 14,
                            DateTime = new DateTime(2025, 6, 12, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 7,
                            Status = 2,
                            UserId = 3
                        },
                        new
                        {
                            Id = 15,
                            DateTime = new DateTime(2025, 4, 18, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            Status = 2,
                            UserId = 4
                        },
                        new
                        {
                            Id = 16,
                            DateTime = new DateTime(2025, 5, 2, 14, 15, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 2,
                            Status = 1,
                            UserId = 4
                        },
                        new
                        {
                            Id = 17,
                            DateTime = new DateTime(2025, 5, 8, 15, 30, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 3,
                            Status = 3,
                            UserId = 4
                        },
                        new
                        {
                            Id = 18,
                            DateTime = new DateTime(2025, 5, 16, 9, 45, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 4,
                            Status = 1,
                            UserId = 4
                        },
                        new
                        {
                            Id = 19,
                            DateTime = new DateTime(2025, 6, 2, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 5,
                            Status = 1,
                            UserId = 4
                        },
                        new
                        {
                            Id = 20,
                            DateTime = new DateTime(2025, 6, 4, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 6,
                            Status = 2,
                            UserId = 4
                        },
                        new
                        {
                            Id = 21,
                            DateTime = new DateTime(2025, 6, 8, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 7,
                            Status = 3,
                            UserId = 4
                        });
                });

            modelBuilder.Entity("AppointmentApp.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Dahiliye"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Kardiyoloji"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Göz"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Ortopedi"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Nöroloji"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Kulak Burun Boğaz"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Üroloji"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Dermatoloji"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Psikiyatri"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Genel Cerrahi"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Kadın Doğum"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Pediatri (Çocuk)"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Endokrinoloji"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Göğüs Hastalıkları"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Enfeksiyon Hastalıkları"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Gastroenteroloji"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Radyoloji"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Anestezi"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Hematoloji"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Onkoloji"
                        });
                });

            modelBuilder.Entity("AppointmentApp.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = "123",
                            Role = 2,
                            UserName = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Password = "456",
                            Role = 1,
                            UserName = "testuser"
                        },
                        new
                        {
                            Id = 3,
                            Password = "1234",
                            Role = 1,
                            UserName = "ali"
                        },
                        new
                        {
                            Id = 4,
                            Password = "1234",
                            Role = 1,
                            UserName = "ayse"
                        });
                });

            modelBuilder.Entity("AppointmentApp.Models.Appointment", b =>
                {
                    b.HasOne("AppointmentApp.Models.Department", "Department")
                        .WithMany("Appointments")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppointmentApp.Models.User", "User")
                        .WithMany("Appointments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AppointmentApp.Models.Department", b =>
                {
                    b.Navigation("Appointments");
                });

            modelBuilder.Entity("AppointmentApp.Models.User", b =>
                {
                    b.Navigation("Appointments");
                });
#pragma warning restore 612, 618
        }
    }
}
